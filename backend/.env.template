# Falta EMS Environment Variables Template
# Copy this file to .env and fill in your values

# ===== JWT & Authentication =====
# CRITICAL: Change this to a strong random secret in production
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
FALTA_EMS_JWT_SECRET=change-me-in-production

# ===== Encryption =====
# CRITICAL: Use a different secret from JWT_SECRET
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
FALTA_EMS_ENCRYPTION_KEY=

# ===== Admin Registration =====
# Optional: Require this key when registering new admins
# Generate with: node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
ADMIN_REGISTRATION_KEY=

# ===== Server Ports =====
ADMIN_SERVER_PORT=4000
USER_SERVER_PORT=5000

# ===== Database =====
# Path to SQLite database file (default: ./backend/data/ems.sqlite)
# DB_PATH=./backend/data/ems.sqlite

# ===== Production Security Settings =====
# NODE_ENV=production
# FORCE_HTTPS=true

# ===== CORS Origins (comma-separated) =====
# For production, only include your production URLs
# ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ===== Rate Limiting =====
# Adjust these if needed (values are in milliseconds)
# RATE_LIMIT_WINDOW=900000  # 15 minutes
# RATE_LIMIT_MAX=100        # 100 requests per window
# AUTH_RATE_LIMIT_MAX=5     # 5 login attempts per window

# ===== Logging =====
# LOG_LEVEL=info
# SECURITY_LOG_LEVEL=warn

# ===== Optional: Email Configuration (if implementing email features) =====
# EMAIL_PROVIDER=
# EMAIL_API_KEY=
# EMAIL_FROM_ADDRESS=
# EMAIL_FROM_NAME=

# ===== Session Configuration =====
# JWT_EXPIRATION_ADMIN=2h
# JWT_EXPIRATION_USER=4h
